#################################
# Debian i3 minimal instalation #
#################################

Based on Ermanno 

# Post installation config
#-------------------------
su -
apt install sudo

# Superuser privileges to __user__
usermod -aG sudo username
reboot

###############################
# minimal i3 post-instalation #
###############################
(based on Ermanno tutorial https://www.youtube.com/watch?v=L1B1O0R1IHA)

# network configuration (if wireless conection)
sudo apt install network-manager wpasupplicant wirelesstools net-tools
sudo systemctl enable NetworkManager
# Realtek driver install
# https://github.com/brektrou/rtl8821CU
# SSID connection
# https://linuxhint.com/3-ways-to-connect-to-wifi-from-the-command-line-on-debian/

# display server
sudo apt install xorg xinit (start from console with *startx*)
sudo cp /etc/X11/xinit/xinitrc ~/.xinitrc
sudo vim .xinitrc -> delete last 5 lines -> add line:
exec i3

# display manager (not necesary)
# lightdm
sudo apt install lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings
sudo systemctl enable lightdm
# ly greeter
sudo apt install build-essential libpam0g-dev libxcb-xkb-dev (dependencies)
git clone --recurse-submodules https://github.com/nullgemm/ly.git
make
sudo make install
sudo systemctl enable ly.service

# compositor and desktop appearance
sudo apt install picom arandr lxappearance arc-theme nitrogen redshift 

# i3
sudo apt install i3 i3blocks dmenu rofi htop terminator ranger \
    thunar font-awesome unclutter

# image
sudp apt install shotwell mpv

# audio
sudo apt install pulseaudio pavucontrol

# office
sudo apt install firefox-esr evince gnumeric galculator transmission
# firefox addons
ghostery ublock dark_reader vimium

# git 
sudo apt install git 
git config --global user.name "username"
git config --global user.email "user@mail.com"

# zsh
sudo apt install zsh 
chsh -s $(which zsh)  # if not in /etc/shells, add: which zsh output to /etc/shells
# individual packages
# zsh-syntax-highlighting zsh-autosuggestions zsh-history-substring-search 
# change prompt, add line in .zshrc:
PROMPT='%2~ > '

# vscode
visit https://code.visualstudio.com/docs/setup/linux
# Code extensions
python live_server prettier powershell pitch_black glassit_VSC vim go go-tools (command palette)

# go
visit https://go.dev/doc/install

# python
sudo apt install python-pip
pip install ipython numpy scipy pandas matplotlib seaborn scikit-learn jupyter-lab

# vim
sudo apt install vim
# vim plug
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
# copy .vimrc
:PlugInstall
# if no background transparency, add this line to sunbather.vim
hi Normal guibg=NONE ctermbg=NONE

##################
# Configurations #
##################

# Different time on windows and linux
timedatectl set-local-rtc 1 --adjust-system-clock
timedatectl
# revert changes
timedatectl set-local-rtc 0 --adjust-system-clock

# Copy files form Arch Linux repository with config files
cd Doccuments
git clone https://github.com/alexnkoma/Archlinux_configuration.git
cp .zshrc .profile .vimrc ~/
cp .zsh .vim
cp /Documents/Archlinux_configuration/.config/terminator ~/.config
cp /Documents/Archlinux_configuration/.config/i3_eOS/* ~/.config/i3

# Wacom tablet configuration
# follow guide: https://techsphinx.com/linux/setup-wacom-tablet-linux/
sudo apt-get install build-essential autoconf linux-headers-$(uname -r)
if test -x ./autogen.sh; then ./autogen.sh; else ./configure; fi && make && sudo make install || echo "Build Failed"
sudo sh -c "apt-get update && apt-get install xserver-xorg-input-wacom$(dpkg -S $(which Xorg) | grep -Eo -- "-hwe-[^:]*")"
sudo apt-get install build-essential libtool && sudo apt-get build-dep libwacom
Download & extract libwacom.tar
cd libwacom
./autogen.sh --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu/
make
sudo make install
Map stylus to one monitor (nvidia drivers => HEAD-0/HEAD-1)
xsetwacom --list
xsetwacom -v set "Wacom Intuos PT S 2 Pen stylus" MapToOutput HEAD-0

# Redshift Night mode
redshift -PO 3600
# reset
redshift -x
